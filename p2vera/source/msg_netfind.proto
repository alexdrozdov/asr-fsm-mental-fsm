package netfind;

enum cookie_status {
	cookie_status_none     = 0; //Cookie_id не может быть проанализирован
	cookie_status_exists   = 1; //Такое cookie_id уже приходило. Вероятно, это этого же приложения, но проверить его авторство невозможно
	cookie_status_actual   = 2; //Полученное значение cookie_id совпадает с уже сохраненным в приложении. Означает, что приложения уже знакомы
	cookie_status_newbie   = 3; //Приложение, отправившее cookie_id, еще не было зарегистрировано в приложении получателе.
	cookie_status_modified = 4; //Приложение обнаружило, что id теперь отличается
}

//Проверка доступности абонента и проверка на актуальность вязи с ним
message msg_link_rq {
	required string rq_cookie_id = 1; //
	optional uint32  rp_port = 2;     //Порт, на который следует присылать ответ
}

message msg_link_rsp {
	required cookie_status status = 1; //
	required string rq_cookie_id  = 2; //Идентификатор приложения, в ответ на запрос которого отправляется этот ответ
	required string rp_cookie_id  = 3; //Идентификатор приложения, отправившего ответ
	required uint32 rq_port       = 4; //Порт, на который следует посылать запросы
}

//Определение парамеров приложения/поиск запущенных приложений в сети
enum app_role {
	group_leader = 0; //Лидер группы приложений запущенных на одной машине
	group_member = 1; //Ведомые приложения, использующие лидеров для подключения к сети
}

message msg_info_rq {
	required string rq_cookie_id = 1;
	optional uint32 rp_port      = 2;   //Порт, на который следует присылать ответ
}

message p2v_channel {
	required string name           = 1; //Название канала. Соединение выполняется по названию
	enum channel_mode {
		p2p = 0;
		p2m = 1;
		m2p = 2;
		m2m = 3;
	}
	required channel_mode ch_mode  = 2; //Способ распространения сообщенийв канале
	enum endpoint_mode {
		receiver    = 0;
		transmitter = 1;
		tranceiver  = 2;
	}
	required endpoint_mode ep_mode = 3; //Тип конечной точки
	enum channel_integrity {
		any      = 0;  //Не имеет значения
		order    = 1;  //Соблюдать порядок
		complete = 2;  //Соблюдать порядок и состав данных
	}
	required channel_integrity ch_integrity = 4; //Надежность доствки данных в канале
	required int32 port            = 5;          //Номер порта, по которому необходимо устанавливать соединение
	optional string caption        = 6;
}

message msg_info_rsp {
	required string rq_cookie_id  = 1;
	required string rp_cookie_id  = 2;
	optional string cluster       = 3; //Название кластера, к которому относится этот сервер
	optional string name          = 4; //Название приложения
	optional string caption       = 5; //Расшифровка названия в человеко читаемом виде
	repeated p2v_channel channels = 6; //Список каналов, в которых может работать этот сервер
}

message msg_srvlist_rq {
	required int32 rp_port           = 1; //Порт, на который следует прислать ответ
	optional bool list_non_localhost = 2; //Если установлено - отправить адреса не только локальных серверов, но и находящихся на других машинах
}

message msg_srvlist_rsp {
	message srv_addr {
		required string addr    = 1;
		required string port    = 2;
		required string uniq_id = 3;
	}
	repeated srv_addr srv_addrs = 1;
}

